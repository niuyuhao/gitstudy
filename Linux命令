vim --> 进入一个文档（正常模式：可处理文档内容）   
i --> 插入模式   
esc  再 ：命令模式下  wq（保存退出）  q（退出） q！（强制退出，不保存）
yy 拷贝当前行  5yy拷贝当前行向下的5行，粘贴p
dd 删除当前行 5dd删除当前行向下的5行
在文件中查找某个单词【命令行下 /关键字， 回车查找，输入n就是查找下一个】
【命令行下：set nu 和:set nonu】设置文件行号，取消文件行号
一般模式下 G到该文档的最末行  gg最首行
输入“hello” 在一般模式下， u 撤销这个动作
一般模式下：20 shift+g -->到第20行
===========================================================
shutdown  -h  now  立刻进行关机
shutdown  -h  1  “hello，1分钟后会关机”
shutdown  -r  now  现在重新启动计算机
halt    关机，作用和上面一样
reboot      现在重启计算机
sync    把内存的数据同步到磁盘

细节：不管是重启系统还是关闭系统，首先运行sync命令，把内存中的数据写到磁盘中
	目前的shutdown/reboot/halt  等命令均已经在关机前进行了sync	
----------------------------------------------------------------------------------------------------
1）登陆时尽量少用root账号登录，因为它是系统管理员，最大的权限，避免操作失误。可以利用普通用户登录
登陆后用“su - 用户名”命令来切换成系统管理员身份
2）在提示符下输入logout即可注销用户

细节：logout注销指令在图形运行级别无效，在运行级别3下有效
============================用户管理==========================
useradd  用户名  --> 添加用户
	细节：当创建用户成功后，会自动创建和用户同名的家目录（默认的家目录/home/）
	          也可以通过useradd -d 指定目录 新的用户名 给新创建的用户指定家目录
		  useradd -d /home/test king	
passwd 用户名	
pwd 显示当前用户所在的目录
userdel 用户名  -->删除用户 保留家目录
userdel -r tom -->删除用户以及用户主目录
一般情况下建议保留家目录
------------------------------------------------查询用户信息指令---------------------------------------
id 用户名
su - 切换用户名
1）高权限用户切换到低权限用户，不需要输入密码，反之需要
2）当需要返回原来用户时，使用exit/logout指令
whoami/ who am i -->查看当前用户/登录用户
用户组
groupadd 组名 --> 新增组
groupdel 组名 --> 组名

useradd -g 用户组 用户名 --> useradd -g wudang zwj
修改用户的组
usermod -g 用户组 用户名 --> usermod -g mojiao zwj

/etc/passwd文件 --> 用户的配置文件，记录用户的各种信息。
每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录 Shell
	     jack:x:1001:1001::/home/jack:/bin/bash
/etc/shadow文件 --> 口令的配置文件
每行的含义：登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志

/etc/group文件 --> 组的配置文件，记录Linux包含的组的信息
每行含义：组名：口令：组标识号：组内用户列表
=============================实用指令===========================
运行级别说明：
0：关机   1：单用户【找回丢失密码】   2：多用户状态没有网络服务   3：多用户状态有网络服务 
4：系统未使用保留给用户      5：图形界面        6：系统重启
常用运行级别是3和5，也可以指定默认运行级别
命令： init[0123456] 应用案例：通过init来切换不同的运行级别 ->  init 3  -> init 5
systemctl get-default
systemctl set-default TARGET.target

multi-user.target  3
graphical.target 5
------------------------------------------------------------------------------------------------------
获得帮助信息
man [命令或配置文件]  man ls
在linux下，隐藏文件是以 .开头，选项可以组合使用  比如 ls -al        
ls -al /root  以单行的形式全部显示root目录下的内容
help 命令（获得shell内置命令的帮助信息）
------------------------------------------------文件目录类--------------------------------------------
pwd --＞显示当前工作目录的绝对路径   /home/test1
ls
-a  --＞ 显示当前目录所有的文件和目录，包括隐藏的。
-l --＞ 以列表的形式显示信息
cd 参数 （切换到指定目录）
cd ~ 回到自己的家目录  你是root , cd ~ 到/root
cd ..回到当前目录的上一级目录
绝对路径  cd /root
相对路径  假如在/home/test，cd ../../root
mkdir [选项] 要创建的目录  mkdir /home/test2
-p：创建多级目录	mkdir -p  /home/test2/test22

rmdir [选项]  要删除的空目录   如果目录下有内容时无法删除
删除非空 目录，需要使用 rm -rf 要删除的目录  --＞ rm -rf test1
touch 文件名称 --＞ 创建空文件
--------------------------------------------------------------------------------------------------
cp 指令 拷贝文件到指定目录
cp [选项] source dest  --＞ cp info.txt bbb
-r 递归复制整个文件夹 --＞ cp -r bbb test     cp -r bbb /opt
\cp -r bbb test --＞ 强制覆盖不提示 \cp

rm [选项]   要删除的文件或目录
-r  递归删除整个文件夹
-f  强制删除不提示
rm -rf bbb

mv 指令
mv 移动文件与目录或重名
mv oldNameFile newNameFile  --＞重命名
mv /temp/movefile /targetFolder --＞移动文件   mv /home/test/bbb/hi.txt aaa
移动整个目录 mv aaa bbb    mv /opt/bbb /home/

cat  查看文件内容
cat [选项] 要查看的文件
-n  显示行号
cat 只能浏览文件，而不能修改文件，为了浏览方便，一般会带上  管道命令 |more
cat -n /etc/profile |more
more 指令是一个基于VI编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。
more指令中内置了若干快捷键（交互的指令）。
more  要查看的文件
空格   	向下翻一页
Enter  	向下翻一行
q        	代表立刻离开more，不再显示该文件内容
Ctrl + F    向下滚动一屏
Ctrl + B    返回上一屏
=              输出当前行的行号
:f              输出文件名和当前行的行号
less指令
less指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支持各种终端。
less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据现实需要加载内容，对于显示
大型文件有较高的效率
less  要查看的文件
空格   		向下翻一页
[pagedown] 	向下翻一页
[pageup]		向上翻动一页
/字串		向下搜寻【字串】的功能；n：向下查找；N：向上查找；
？字串		向上搜寻【字串】的功能；n：向上查找；N：向下查找
q        		离开less这个程序

echo指令  输出内容到控制台
echo [选项][输出内容]
echo $HOSTNAME
echo hello,world!

head指令
head用于显示文件的开头部分内容，默认情况下head指令显示文件的前10行内容
基本语法
head  文件
head -n5 /etc/profile  查看前5行

tail 用于输出文件中尾部的内容，默认情况下tail指令显示文件的前10行内容
tail  文件 --＞ 查看文件尾10行内容
tail -n5 文件 --＞ 查看文件尾5行内容
tail -f 文件 --＞实时追踪该文档的所有更新
tail -f filename 会把 filename 文件里的最尾部的内容显示在屏幕上，
并且不断刷新，只要 filename 更新就可以看到最新的文件内容。

ls -l > 文件  --＞列表的内容写入文件   覆盖写
ls -al ＞＞文件 --＞ 追加到文件末尾  ls -al ＞ /home/info.txt  如果没有会创建 info.txt
cal ＞＞ /home/mycal

ln指令  软连接也称为符号链接，类似于windows里的快捷方式，主要存放了链接其他文件的路径
ln -s [原文件或目录][软连接名] --＞给原文件创建一个软链接
ln -s /root /home/myroot

history  查看已经使用过历史命令，也可以执行历史命令
history 10 显示最近使用过的10个指令。
！5     执行历史编号为5的指令
--------------------------------------------时间日期类--------------------------------------------
date     	   --＞    显示当前时间
date +%Y    --＞    显示当前年份
date +%m   --＞    显示当前月份
date +%d    --＞    显示当前是哪一天
date "+%Y-%m-%d %H:%M:%S"     --＞    显示年月日时分秒

date -s 字符串时间  --＞设置日期   date -s 2020-11-03 20:02:10""
cal指令
cal [选项] 	    --＞不加选项，显示本月日历
--------------------------------------------搜索查找类--------------------------------------------
find 指令 --＞ 将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。
find [搜索范围][选项]
选项说明： -name＜查询方式＞ 按照指定的文件名查找模式查找文件  find /home -name info.txt
		ls -lh 显示文件大小
	  -user＜用户名＞ 查找属于指定用户名所有文件  find /opt -user 用户名称
                  -name＜查询方式＞ 按照指定的文件大小查找文件  find / -size +200M   +n大于  -n小于  n等于，单位有k，M，G
locate 指令
locate 指令可以快速定位文件路径。locate指令利用事先建立的系统中所有文件名称及路径的locate数据库
实现快速定位给定的文件。locate指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，
管理员必须定期更新locate时刻
基本语法
locate  搜索文件
由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locate数据库。
which指令，可以查看某个指令在哪个目录下  which ls    --＞  /usr/bin/ls
grep指令和管道符号 |     grep过滤查找，管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。
grep[选项] 查找内容 源文件
常用选项   -n 显示匹配行及行号
	 -i  忽略字母大小写
cat /home/hi.txt | grep -n  "yes"  查找yes所在行，并且显示行号
grep -n "yes" /home/hi.txt
--------------------------------------------压缩和解压类--------------------------------------------
gzip  用于压缩文件  gunzip  用于解压的
gzip  文件    --＞   压缩文件，只能将文件压缩为*.gz文件
gunzip  文件.gz  --＞ 解压缩文件命令

zip  用于压缩文件，unzip 用于解压的，这个在项目打包发布中很有用
zip  [选项] XXX.zip  将要压缩的内容（压缩文件和目录的命令）
unzip [选项] XXX.zip （解压缩的文件）
zip -r  递归压缩，即压缩目录
unzip -d<目录>  指定解压后文件的存放位置

zip -r myhome.zip /home/ 将home目录及其包含的文件和子文件夹都压缩
mkdir /opt/tmp
unzip -d /opt/tmp /home/myhome.zip

tar 指令 是打包指令，最后打包后的文件是 .tar.gz的文件
tar [选项] XXX.tar.gz  打包的内容 （功能描述：打包目录，压缩后的文件格式.tar.gz）
	选项说明   -c    --＞  产生.tar打包文件
		-v    --＞  显示详细信息
		-f     --＞  指定压缩后的文件名
		-z     --＞  打包同时压缩
		-x     --＞  解包.tar文件
压缩多个文件
tar -zcvf name.tar.gz /home/one.txt /home/two.txt
将/home 的文件夹压缩成myhome.tar.gz
tar -zcvf myhome.tar.gz /home/
将name.tar.gz 解压到当前目录
tar -zxvf name.tar.gz
将myhome.tar.gz解压到 /opt/tmp2目录下
	1）mkdir tmp2 
	2）tar -zxvf /home/myhome.tar.gz -C /opt/tmp2
========================组管理和权限管理==========================
在linux中的每个用户必须属于一个组，不能独立于组外。在linux中每个文件有所有者，所在组，其他组的概念。
	1）所有者
	2）所在组
	3）其他组
	4）改变用户所在的组
所有者：一般为文件的创建者，谁创建了该文件，就自然的成为该文件的所有者。
	ls -ahl  --＞查看文件的所有者
